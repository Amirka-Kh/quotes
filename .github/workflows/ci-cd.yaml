name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Security scan with bandit
        run: |
          bandit -r . -f json -o bandit-report.json || true
      - name: Run tests
        run: |
          python manage.py migrate --noinput
          python manage.py test --noinput
      - name: Collect static files
        run: |
          python manage.py collectstatic --noinput
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            bandit-report.json
            htmlcov/

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/django-quotes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Image digest
        run: echo ${{ steps.build.outputs.digest }}

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/django-quotes:latest
          format: 'sarif'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  notify:
    runs-on: ubuntu-latest
    needs: [test, build-and-push, security-scan]
    if: always()
    steps:
      - name: Notify on success
        if: ${{ needs.test.result == 'success' && needs.build-and-push.result == 'success' }}
        run: |
          echo "✅ CI/CD Pipeline completed successfully!"
          echo "Docker image: ${{ secrets.DOCKERHUB_USERNAME }}/django-quotes:latest"
      - name: Notify on failure
        if: ${{ needs.test.result == 'failure' || needs.build-and-push.result == 'failure' }}
        run: |
          echo "❌ CI/CD Pipeline failed!"
          echo "Check the logs for details."
